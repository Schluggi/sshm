#!/usr/bin/env python3
import subprocess
from os import getenv
from pathlib import Path
from sys import argv
from sshconf import read_ssh_config
from whiptail import Whiptail

CONFIG_PATH = getenv('SSHM_CONFIG_PATH') or f'/{Path.home()}/.ssh/config'
pattern = ''

try:
    pattern = argv[1]
except IndexError:
    pass


def ssh(host):
    print(f'Connecting to {host}\n')
    subprocess.run(['ssh', host])
    exit()


ssh_config = read_ssh_config(CONFIG_PATH)
hosts = []

for host in sorted([host for host in ssh_config.hosts() if pattern in host]):
    hostname = ssh_config.host(host).get('hostname', host)
    port = ssh_config.host(host).get('port')

    if port:
        hosts.append((host, f'{hostname}:{port}'))
    else:
        hosts.append((host, f'{hostname}'))


if len(hosts) == 1:
    ssh(hosts[0][1])

elif hosts:
    window = Whiptail(title='SSHM - SSH Menu', auto_exit=True)
    menu = window.menu('Choose a host to connect', hosts)
    ssh(menu[0])

else:
    print('No matching hosts found')
    exit(1)
